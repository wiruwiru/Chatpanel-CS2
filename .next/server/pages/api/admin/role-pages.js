"use strict";(()=>{var e={};e.id=464,e.ids=[464],e.modules={666:e=>{e.exports=require("cookie")},829:e=>{e.exports=require("jsonwebtoken")},3480:(e,a,s)=>{e.exports=s(5600)},4917:(e,a,s)=>{s.r(a),s.d(a,{config:()=>E,default:()=>d,routeModule:()=>p});var t={};s.r(t),s.d(t,{default:()=>c});var n=s(3480),r=s(8667),o=s(6435),i=s(666),l=s(829),u=s(8954);async function c(e,a){let s=(0,i.parse)(e.headers.cookie||"").session;if(!s)return a.status(401).json({message:"Unauthorized"});try{let t=(0,l.verify)(s,process.env.SESSION_SECRET),n=await u.A.getConnection();try{let[s]=await n.execute("SELECT role FROM chatpanel_authorized WHERE steam_id = ?",[t.steamId64]);if(0===s.length||"owner"!==s[0].role)return a.status(403).json({message:"Forbidden: Only owners can manage role pages"});if("GET"===e.method){let[e]=await n.execute("SELECT * FROM chatpanel_role_pages");a.status(200).json({rolePages:e})}else if("POST"===e.method){let{roleId:s,pageId:t}=e.body,[r]=await n.execute("SELECT name FROM chatpanel_roles WHERE id = ?",[s]);if(r.length>0&&"owner"===r[0].name)return a.status(400).json({message:"Cannot modify owner page access"});let[o]=await n.execute("SELECT name FROM chatpanel_pages WHERE id = ?",[t]);if(o.length>0&&"roles"===o[0].name&&"owner"!==r[0].name)return a.status(400).json({message:"Only owner can access role management"});let[i]=await n.execute("SELECT * FROM chatpanel_role_pages WHERE role_id = ? AND page_id = ?",[s,t]);if(i.length>0)return a.status(200).json({message:"Page access already assigned"});await n.execute("INSERT INTO chatpanel_role_pages (role_id, page_id) VALUES (?, ?)",[s,t]),a.status(201).json({message:"Page access assigned successfully"})}else if("DELETE"===e.method){let{roleId:s,pageId:t}=e.query,[r]=await n.execute("SELECT name FROM chatpanel_roles WHERE id = ?",[s]);if(r.length>0&&"owner"===r[0].name)return a.status(400).json({message:"Cannot modify owner page access"});await n.execute("DELETE FROM chatpanel_role_pages WHERE role_id = ? AND page_id = ?",[s,t]),a.status(200).json({message:"Page access removed successfully"})}else a.status(405).json({message:"Method not allowed"})}finally{n.release()}}catch(e){console.error("Error in role-pages API:",e),a.status(500).json({message:"Internal server error"})}}let d=(0,o.M)(t,"default"),E=(0,o.M)(t,"config"),p=new n.PagesAPIRouteModule({definition:{kind:r.A.PAGES_API,page:"/api/admin/role-pages",pathname:"/api/admin/role-pages",bundlePath:"",filename:""},userland:t})},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,a)=>{Object.defineProperty(a,"M",{enumerable:!0,get:function(){return function e(a,s){return s in a?a[s]:"then"in a&&"function"==typeof a.then?a.then(a=>e(a,s)):"function"==typeof a&&"default"===s?a:void 0}}})},8667:(e,a)=>{Object.defineProperty(a,"A",{enumerable:!0,get:function(){return s}});var s=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},8954:(e,a,s)=>{s.d(a,{A:()=>n});let t=require("mysql2/promise"),n=s.n(t)().createPool({host:process.env.DB_HOST,user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME,waitForConnections:!0,connectionLimit:10,queueLimit:0})}};var a=require("../../../webpack-api-runtime.js");a.C(e);var s=a(a.s=4917);module.exports=s})();