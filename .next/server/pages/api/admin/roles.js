"use strict";(()=>{var e={};e.id=38,e.ids=[38],e.modules={666:e=>{e.exports=require("cookie")},829:e=>{e.exports=require("jsonwebtoken")},1907:(e,s,t)=>{t.r(s),t.d(s,{config:()=>E,default:()=>c,routeModule:()=>m});var n={};t.r(n),t.d(n,{default:()=>d});var a=t(3480),r=t(8667),o=t(6435),i=t(666),l=t(829),u=t(8954);async function d(e,s){let t=(0,i.parse)(e.headers.cookie||"").session;if(!t)return s.status(401).json({message:"Unauthorized"});try{let n=(0,l.verify)(t,process.env.SESSION_SECRET),a=await u.A.getConnection();try{let[t]=await a.execute("SELECT role FROM chatpanel_authorized WHERE steam_id = ?",[n.steamId64]);if(0===t.length||"owner"!==t[0].role)return s.status(403).json({message:"Forbidden: Only owners can manage roles"});if("GET"===e.method){let[e]=await a.execute("SELECT * FROM chatpanel_roles ORDER BY name");s.status(200).json({roles:e})}else if("POST"===e.method){let{name:t,description:n}=e.body,[r]=await a.execute("SELECT * FROM chatpanel_roles WHERE name = ?",[t]);if(r.length>0)return s.status(400).json({message:"Role already exists"});await a.execute("INSERT INTO chatpanel_roles (name, description) VALUES (?, ?)",[t,n]),s.status(201).json({message:"Role added successfully"})}else if("PUT"===e.method){let t=e.query.id,{name:n,description:r}=e.body;if(!t)return s.status(400).json({message:"Role ID is required"});let[o]=await a.execute("SELECT is_system FROM chatpanel_roles WHERE id = ?",[t]);if(0===o.length)return s.status(404).json({message:"Role not found"});if(o[0].is_system)return s.status(400).json({message:"Cannot modify system roles"});await a.execute("UPDATE chatpanel_roles SET name = ?, description = ? WHERE id = ?",[n,r,t]),s.status(200).json({message:"Role updated successfully"})}else if("DELETE"===e.method){let{id:t}=e.query,[n]=await a.execute("SELECT is_system FROM chatpanel_roles WHERE id = ?",[t]);if(n.length>0&&n[0].is_system)return s.status(400).json({message:"Cannot delete system roles"});await a.execute("DELETE FROM chatpanel_roles WHERE id = ?",[t]),s.status(200).json({message:"Role deleted successfully"})}else s.status(405).json({message:"Method not allowed"})}finally{a.release()}}catch(e){console.error("Error in roles API:",e),s.status(500).json({message:"Internal server error"})}}let c=(0,o.M)(n,"default"),E=(0,o.M)(n,"config"),m=new a.PagesAPIRouteModule({definition:{kind:r.A.PAGES_API,page:"/api/admin/roles",pathname:"/api/admin/roles",bundlePath:"",filename:""},userland:n})},3480:(e,s,t)=>{e.exports=t(5600)},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,s)=>{Object.defineProperty(s,"M",{enumerable:!0,get:function(){return function e(s,t){return t in s?s[t]:"then"in s&&"function"==typeof s.then?s.then(s=>e(s,t)):"function"==typeof s&&"default"===t?s:void 0}}})},8667:(e,s)=>{Object.defineProperty(s,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},8954:(e,s,t)=>{t.d(s,{A:()=>a});let n=require("mysql2/promise"),a=t.n(n)().createPool({host:process.env.DB_HOST,user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME,waitForConnections:!0,connectionLimit:10,queueLimit:0})}};var s=require("../../../webpack-api-runtime.js");s.C(e);var t=s(s.s=1907);module.exports=t})();